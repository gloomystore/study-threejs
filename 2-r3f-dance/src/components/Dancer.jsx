/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/dancer.glb -o src/components/Dancer.jsx 
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Dancer(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/dancer.glb')
  const { actions } = useAnimations(animations, group)
  const [currentAnimation, setCurrentAnimation] = useState('wave')
  // 애니메이션 액션이 바뀌면 페이드 동작으로 부드럽게 넣어줌
  useEffect(() => {
    actions[currentAnimation].fadeIn(0.5).play()
    return (() => {
      actions[currentAnimation].fadeOut(0.5).stop()
    })
  }, [actions, currentAnimation])
  return (
    <group 
      ref={group} 
      {...props} 
      dispose={null} 
      scale={0.01} 
      position={[0, 0.8, 0]}

      onClick={() => {
        setCurrentAnimation(prev => {
          if(prev === 'wave') return 'windmill'
          else return 'wave'
        })
      }}
      // onPointerUp={() => {
      //   console.log('업')
      // }}
      // onPointerDown={() => {
      //   console.log('다운')
      // }}
      
      >
      <group name="AuxScene">
        <group position={[0, -82.942, -1.295]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Ch03" geometry={nodes.Ch03.geometry} material={materials.Ch03_Body} skeleton={nodes.Ch03.skeleton} >
            {/* <meshStandardMaterial color='#ff0000' /> */}
          </skinnedMesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/dancer.glb')
